@{
    Layout = null;
}

@model DaxiTaxi.Models.Ride

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <title>Admin Rides</title>
    <link rel="stylesheet" href="~/Content/bootstrap.min.css">
    <script src="~/Scripts/jquery-3.3.1.js"></script>
    <link rel="stylesheet" type="text/css" href="~/Content/CustomersRide.css">
    <link rel="stylesheet" href="~/Content/bootstrap.min.css">
    <link rel="icon" href="data:;base64,iVBORwOKGO=" />
    <link href="https://fonts.googleapis.com/css?family=Poppins&display=swap" rel="stylesheet">
</head>
<body>
    <div class="contact-form">
        <img src="../../Images/taxi-48.png" class="avatar">

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group" style="margin-bottom:50px;">
            @Html.EditorFor(model => model.OrderDateTime, new { htmlAttributes = new { id = "date", @class = "control-label col-md-2", style = "background:transparent;border:0;text-align:center;color:white;font-size:20px;", @readonly = "readonly" } })
        </div>

        <div class="form-group" style="float:left;">
            @Html.LabelFor(model => model.Customer.Username, htmlAttributes: new { @class = "control-label col-md-2", style = "color:white;margin-top:15px;" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Customer.Username, new { htmlAttributes = new { id = "dispatcher", @class = "form-control", style = "width:300px;height:30px;margin-left:50px;color:white;margin-bottom:-20px;", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.Customer.Username, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">

            @Html.LabelFor(model => model.CustomerLocation.Address, htmlAttributes: new { @class = "control-label col-md-2", style = "color:white;margin-top:15px;" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CustomerLocation.Address.Street, new { htmlAttributes = new { id = "currentLocation", @class = "form-control", style = "width:300px;height:30px;margin-left:50px;color:white;", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.CustomerLocation, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.RideState, htmlAttributes: new { @class = "control-label col-md-2", style = "color:white;margin-top:15px;" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.RideState, new { htmlAttributes = new { id = "state", @class = "form-control", style = "width:300px;height:30px;margin-left:50px;color:white;", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.Amount, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group" style="padding-top:10px;">
            @Html.LabelFor(model => model.Amount, htmlAttributes: new { @class = "control-label col-md-2", style = "color:white;margin-top:25px;" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Amount, new { htmlAttributes = new { id = "amount", @class = "form-control", style = "width:300px;height:30px;margin-left:50px;margin-top:15px;color:white;", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.Amount, "", new { @class = "text-danger" })
            </div>
        </div>

        <label style="color:white;margin-top:15px;height:30px;margin-right:330px;padding-top:30px;margin-left:30px;float:left;">Driver</label>
        <form id="myForm" style="margin-left:150px;margin-top:20px;">
            <select class="form-control" id="driverDropdown" name="driverDropdown" style="width:300px;float:left;"></select>
        </form>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" id="btnAssignRide" value="Assign Ride" class="btn btn-default" style="width:200px;border-radius:20px;color:white;background-color:red;border:none;margin-top:100px;margin-left:50px;" />
            </div>
        </div>

    </div>

    <script>
        $("#btnAssignRide").attr("disabled", true);
        var id = window.location.search.slice(1).split('&')[0].split('=')[1];
        var dispatecher;
        var driverId;

        $(document).ready(function () {

            var date = $("#date")
            var currentLocation = $("#currentLocation")
            var cost = $("#amount")
            var state = $("#state")
            var admin = $("#dispatcher")
            var driver = $("#driverDropdown")


            $.ajax({
                type: "GET",
                url: "https://localhost:44345/api/rideapi/getRide?id=" + id,
                contentType: "application/json; charset=utf-8",
                success: function (response) {

                    console.log("Success" + " " + response);


                    currentLocation.val(response.CustomerLocation.Address.Street + " " +
                        response.CustomerLocation.Address.StreetNumber + " " +
                        response.CustomerLocation.Address.CallNumber + " " +
                        response.CustomerLocation.Address.City)

                    cost.val(response.Amount)
                    admin.val(response.Customer.Username)
                    state.val(response.RideState)

                    dispatcher = (response.Dispatcher != null) ? (date.val(response.Dispatcher.Username + " - " + response.OrderDateTime)) :  (date.val(response.OrderDateTime))

                    if (response.Driver != null) {
                        var s = '<option value="' + response.Driver.Id + '">' + response.Driver.Username + '</option>';
                        driver.html(s)
                    } else {
                            $("#btnAssignRide").attr("disabled", false);
                            $.ajax({  
                                type: "GET",  
                                url: "https://localhost:44345/api/rideapi/available",  
                                data: "{}",  
                                success: function (data) {
                                    console.log(data)
                                    var s; 
                                    for (var i = 0; i < data.length; i++) {  
                                        s += '<option value="' + data[i].Id + '">' + data[i].Username + '</option>';  
                                    }  
                                    $("#driverDropdown").html(s);  

                                    
                                }  
                            });  
  
                    }

                },
                failure: function (response) {
                    console.log("Failure");
                    console.log(response)
                },
                error: function (jqXHR, textStatus, errorThrown) {
                    console.log("Error: " + errorThrown + " , Please try again");
                }

            })
  
        })

        $(document).ready(function () {

            $('#driverDropdown').click(function (event) {
                var departureAirportt = $(event.target).val()
                if (departureAirportt != null) {
                    driverId = departureAirportt
                    console.log(driverId)
                   
                }
                console.log("In function" + driverId)
                
                 $("#btnAssignRide").on("click", function () {

                        $.ajax({

                            type: "PUT",
                            url: "https://localhost:44345/api/managerideapi/acceptRide?id=" + id + '&driverId=' + driverId,
                            contentType: "application/json; charset=utf-8",
                            success: function (response) {
                                console.log("Success");
                            },
                            failure: function (response) {
                                console.log("Failure");
                            },
                            error: function (jqXHR, textStatus, errorThrown) {
                                alert("Error: " + errorThrown + " , Please try again");
                            }

                        })
                    })

            })
          
        })


    </script>
</body>
</html>